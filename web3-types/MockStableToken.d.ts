/* Generated by ts-generator ver. 0.0.8 */
/* tslint:disable */

import BN from "bn.js";
import { Contract, ContractOptions, EventOptions } from "web3-eth-contract";
import { EventLog } from "web3-core";
import { EventEmitter } from "events";
import { Callback, TransactionObject, ContractEvent } from "./types";

export class MockStableToken extends Contract {
  constructor(
    jsonInterface: any[],
    address?: string,
    options?: ContractOptions
  );
  methods: {
    mint(arg0: string, arg1: number | string): TransactionObject<boolean>;

    burn(arg0: number | string): TransactionObject<boolean>;

    resetLastRebase(): TransactionObject<void>;

    transfer(arg0: string, arg1: number | string): TransactionObject<boolean>;

    transferFrom(
      arg0: string,
      arg1: string,
      arg2: number | string
    ): TransactionObject<boolean>;

    setNeedsRebase(): TransactionObject<void>;

    setTotalSupply(value: number | string): TransactionObject<void>;

    setTargetTotalSupply(value: number | string): TransactionObject<void>;

    _needsRebase(): TransactionObject<boolean>;
    decimals(): TransactionObject<BN>;
    _totalSupply(): TransactionObject<BN>;
    _targetTotalSupply(): TransactionObject<BN>;
    needsRebase(): TransactionObject<boolean>;
    totalSupply(): TransactionObject<BN>;
    targetTotalSupply(): TransactionObject<BN>;
  };
  events: {
    allEvents: (
      options?: EventOptions,
      cb?: Callback<EventLog>
    ) => EventEmitter;
  };
}
